#!/bin/sh
#  Copyright (C) 2011, Parallels, Inc. All rights reserved.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#
# Download a precreated container tarball (a template cache).
#
# Argument:
#  $* -- OS template name (like centos-6-x86_64), can specify a few
#
# Exit codes:
#  0 -- template downloaded succesfully
#  1 -- download error
#  2 -- local template file already present, not overwriting
#  3 -- error in usage (no argument provided)
#  4 -- wget binary not found
#  5 -- GPG signature check failed
#
# If you want this script to do automatic GPG signature checking, you need
# to have gpg binary installed, and OpenVZ public key to be in your keyring.
# The latter can be achieved by running the following command as root:
#   gpg --search-keys security@openvz.org
# For more details, see gpg(1) man page and the following link:
#   http://wiki.openvz.org/Package_signatures#Importing_the_public_key


# Wget is required for this script to function
wget -V >/dev/null || exit 4

. @PKGLIBDIR@/scripts/vps-functions
. @PKGCONFDIR@/vz.conf

# Prefix to template cache repository URL
: ${TMPL_REPO_PREFIX="http://download.openvz.org/template/precreated"}
# What directories to use
: ${TEMPLATE_REPOS="${TMPL_REPO_PREFIX}"}
# Uncomment this to enable 'beta' (new) templates
#TEMPLATE_REPOS="${TEMPLATE_REPOS} ${TMPL_REPO_PREFIX}/beta/"
# Uncomment this to enable 'unsupported' (old) templates
#TEMPLATE_REPOS="${TEMPLATE_REPOS} ${TMPL_REPO_PREFIX}/unsupported"

: ${TMPL_SUFFIXES="tar.gz"}
: ${GPG_KEY="security@openvz.org"}

vzcheckvar TEMPLATE
TCACHEDIR=$TEMPLATE/cache

if test "x${CHECK_TEMPLATE_SIG}" = "x"; then
	# Check if gpg is installed and our key is there
	if gpg -k "$GPG_KEY" >/dev/null 2>&1; then
		CHECK_TEMPLATE_SIG=1
	fi
fi

check_sig()
{
	test "x${CHECK_TEMPLATE_SIG}" = "x" && return 0

	local sig=$1.asc
	local file=$2
	local ret

	wget -q $sig || return 1
	sig=$(basename $sig)

	gpg --verify $sig $file
	ret=$?
	rm -f $sig

	return $ret
}

download()
{
	local prefix suffix src dst
	local tmpl=$1
	local ret

	for prefix in $TEMPLATE_REPOS; do
		for suffix in $TMPL_SUFFIXES; do
			src=${prefix}/${tmpl}.${suffix}
			dst=$TCACHEDIR/${tmpl}.${suffix}
			if test -f $dst; then
				echo "File $dst is already present," \
					"not overwriting." 1>&2
				exit 2
			fi
			# Check if the file is there
			if wget -q --spider -P $TCACHEDIR ${src}; then
				trap "rm -f ${dst}" INT TERM
				wget -P $TCACHEDIR ${src}
				ret=$?
				trap - INT TERM
				if test $ret -eq 0; then
					echo "Downloaded succesfully."
					if ! check_sig $src $dst; then
						echo "Signature check" \
							"failed!" 1>&2
						exit 5
					else
						echo "Signature check passed."
						exit 0
					fi
				else
					echo "Failed to download ${src}!" 1>&2
					rm -f $dst
					exit 1
				fi
			fi
		done
	done
	echo "Template $tmpl not found!" 1>&2
	exit 1
}

if [ $# -lt 1 ]; then
	echo "Usage: $0 template-name [template-name-2 ...]" 1>&2
	exit 3
fi

for f in $*; do
	download $f
done
